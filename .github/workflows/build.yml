name: macOS Build (RIME only, arm64)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      # 1️⃣ 拉取 fcitx5-plugins 仓库，递归子模块
      - name: Checkout fcitx5-plugins
        uses: actions/checkout@v5
        with:
          repository: fcitx-contrib/fcitx5-plugins
          path: fcitx5-plugins
          submodules: recursive

      - uses: actions/checkout@v5
        with:
          submodules: recursive
          repository: google/mozc
          path: fcitx5-plugins/fcitx5-mozc/mozc
          ref: ce1fb7fe48efb1d85f8e54eff1b05e9e692bf0d4

      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      # 2️⃣ 安装依赖
      - name: Install dependencies
        working-directory: fcitx5-plugins
        env:
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
        run: |
          brew update # always use latest go as github actions image may be inconsistent between runs.
          brew install \
            extra-cmake-modules \
            ninja \
            go
          ./scripts/install-deps.sh macos arm64
          sudo tar xf cache/macos/marisa-arm64.tar.bz2 -C /usr/local bin/marisa-build # Make use of Rosetta
          pip install dirhash

      - name: Install Fcitx5 dev package
        run: |
          wget https://github.com/fcitx-contrib/fcitx5-macos/releases/download/latest/Fcitx5-arm64-dev.tar.bz2
          sudo tar xf Fcitx5-arm64-dev.tar.bz2 -C "/Library/Input Methods"

      # 4️⃣ 修改 rimestate.cpp
      - name: Patch rimestate.cpp
        working-directory: fcitx5-plugins
        run: |
          sed -i '' '/if (context.menu.num_candidates) {/c\
          if (!api->get_option(session, "_hide_candidate") && context.menu.num_candidates) {' fcitx5-rime/src/rimestate.cpp
          cat fcitx5-rime/src/rimestate.cpp

      # 5️⃣ 编译
      - name: Configure & Build
        working-directory: fcitx5-plugins
        env:
          CGO_ENABLED: 1
          CGO_CFLAGS: -mmacosx-version-min=13.3
          GOFLAGS: -ldflags=-buildid=
          GOARCH: arm64
        run: |
          ls -l patches
          git apply --directory=libime patches/libime.patch
          git apply --directory=fcitx5-rime patches/rime.log.patch
          cmake -B build/macos-arm64 -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=arm64
          cmake --build build/macos-arm64
          ./scripts/install.sh macos arm64

      # 7️⃣ 上传 artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fcitx5-plugins-rime-macos-arm64
          working-directory: fcitx5-plugins
          path: |
            build/macos-arm64/*-arm64.tar.bz2
            build/macos-arm64/*-any.tar.bz2

      - name: Check validity
        working-directory: fcitx5-plugins
        run: |
          ./scripts/check-validity.sh
          python scripts/check-shared-files.py build/macos-arm64/*/data/plugin/*.json

      - name: Generate meta-arm64.json
        working-directory: fcitx5-plugins
        run: |
          python scripts/generate-meta.py arm64

      - name: Upload meta-arm64.json
        uses: actions/upload-artifact@v4
        with:
          working-directory: fcitx5-plugins
          name: artifact-macos-meta-arm64.json
          path: |
            meta-arm64.json
